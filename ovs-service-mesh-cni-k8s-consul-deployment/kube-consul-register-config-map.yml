
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-consul-register
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-consul-register
rules:
- apiGroups: [""]
  resources: ["configmaps", "services", "endpoints", "pods"]
  verbs: ["watch", "get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-consul-register
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-consul-register
subjects:
  - kind: ServiceAccount
    name: kube-consul-register
    namespace: default
---
apiVersion: v1
data:
    consul_address: "localhost"
    consul_port: "8500"
    consul_scheme: "http"
    consul_ca_file: ""
    consul_cert_file: ""
    consul_key_file: ""
    consul_insecure_skip_verify: "false"
    consul_token: ""
    consul_timeout: "2s"
    consul_container_name: "consul"
    consul_node_selector: "consul=enabled"
    pod_label_selector: ""
    k8s_tag: "kubernetes"
    register_mode: "single"
    register_source: "pod"
kind: ConfigMap
metadata:
    name: kube-consul-register
    namespace: default
# ---
# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: kube-consul-register
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: kube-consul-register
#   template:
#     metadata:
#       labels:
#         app: kube-consul-register
#     spec:
#       serviceAccountName: kube-consul-register
#       containers:
#       - name: kube-consul-register
#         image: tczekajlo/kube-consul-register:0.1.9
#         imagePullPolicy: Always
#         resources:
#           requests:
#             cpu: 1
#             memory: 300Mi
#         args:
#         - -logtostderr=true
#         - -configmap=default/kube-consul-register